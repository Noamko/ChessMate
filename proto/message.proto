syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.chessmate.command";
option java_outer_classname = "CommandProto";

package command;

service Command {
   rpc Execute (CommandRequest) returns (CommandResponse);
}

message CommandRequest {
    oneof command {
        ChallengeAIRequest challengeAI = 2;
        ChallengeLichessRequest challengeLichess = 3;
        EndTurnRequest endTurn = 4;
        GetBoardStateRequest getBoardState = 5;
        GetEvaluationRequest getEvaluation = 6;
		ResetRequest reset = 7;
    }
}

message CommandResponse {
    oneof command {
        ChallengeAIResponse challengeAI = 1;
        ChallengeLichessResponse challengeLichess = 2;
        EndTurnResponse endTurn = 3;
        GetBoardStateResponse getBoardState = 4;
        GetEvaluationResponse getEvaluation = 5;
        CommandError error = 6;
    }
}
enum color {
        WHITE = 0;
        BLACK = 1;
        RANDOM = 2;
}

message ResetRequest {}

message ChallengeAIRequest {
    int32 level = 1;
    color color = 2;
    int32 white_timer = 3;
    int32 black_timer = 4;
}

message ChallengeLichessRequest {
    string gameid = 1;
    string lichessid = 2;
}


message EndTurnRequest {
    string move = 2;
}

message GetBoardStateRequest {}

message GetEvaluationRequest {}

message GetBoardStateResponse {
    uint64 state = 1;
}

message GetEvaluationResponse {
    int32 evaluation = 1;
}

message EndTurnResponse {}

message ChallengeAIResponse {
}

message ChallengeLichessResponse {
    string gameid = 1;
    string lichessid = 2;
}

message CommandError {
    int32 code = 1;
    string msg = 2;
}
